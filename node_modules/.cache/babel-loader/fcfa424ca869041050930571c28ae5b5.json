{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT COURSE\\\\textfinder\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n//import { useState } from 'react';\nimport './App.css'; //import About from './components/About';\n\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mode, setMode] = useState('light'); //whether dark mode is enabled or not\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n  };\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      sAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextFinder\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        heading: \"Enter the text to analyze below\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 2\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","React","useState","Alert","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","toggleMode","document","body","style","backgroundColor","sAlert"],"sources":["D:/REACT COURSE/textfinder/src/App.js"],"sourcesContent":["//import { useState } from 'react';\nimport './App.css';\n//import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\nconst showAlert =(message, type)=>{\n setAlert({\n    msg: message,\n    type: type\n })\n}\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode ('dark');\n      document.body.style.backgroundColor ='#042743';\n      sAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else{\n      setMode ('light');\n      document.body.style.backgroundColor ='white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n }\n  return (\n   <>\n{ /* <Navbar title=\"TextFinder \"  aboutText=\"About Textfinder\"/>*/}\n { /*<Navbar/>*/}\n <Navbar title=\"TextFinder\" mode={mode} toggleMode={toggleMode}/>\n<Alert alert={alert}/>\n<div className=\"container my-3\">\n{<TextForm heading=\"Enter the text to analyze below\"mode={mode}/>}\n { /*<About/>*/}\n </div>\n  </>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA;AACA,OAAO,WAAP,C,CACA;;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,OAAD,CAAhC,CADa,CAC8B;;EAC3C,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;;EAEF,MAAMO,SAAS,GAAE,CAACC,OAAD,EAAUC,IAAV,KAAiB;IACjCH,QAAQ,CAAC;MACNI,GAAG,EAAEF,OADC;MAENC,IAAI,EAAEA;IAFA,CAAD,CAAR;EAIA,CALD;;EAOE,MAAME,UAAU,GAAG,MAAI;IACrB,IAAGR,IAAI,KAAK,OAAZ,EAAoB;MAClBC,OAAO,CAAE,MAAF,CAAP;MACAQ,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAqC,SAArC;MACAC,MAAM,CAAC,4BAAD,EAA+B,SAA/B,CAAN;IACD,CAJD,MAKI;MACFZ,OAAO,CAAE,OAAF,CAAP;MACAQ,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAqC,OAArC;MACAR,SAAS,CAAC,6BAAD,EAAgC,SAAhC,CAAT;IACD;EACH,CAXA;;EAYA,oBACC;IAAA,wBAGF,QAAC,MAAD;MAAQ,KAAK,EAAC,YAAd;MAA2B,IAAI,EAAEJ,IAAjC;MAAuC,UAAU,EAAEQ;IAAnD;MAAA;MAAA;MAAA;IAAA,QAHE,eAIH,QAAC,KAAD;MAAO,KAAK,EAAEN;IAAd;MAAA;MAAA;MAAA;IAAA,QAJG,eAKH;MAAK,SAAS,EAAC,gBAAf;MAAA,uBACC,QAAC,QAAD;QAAU,OAAO,EAAC,iCAAlB;QAAmD,IAAI,EAAEF;MAAzD;QAAA;QAAA;QAAA;MAAA;IADD;MAAA;MAAA;MAAA;IAAA,QALG;EAAA,gBADD;AAYD;;GAnCQD,G;;KAAAA,G;AAqCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}